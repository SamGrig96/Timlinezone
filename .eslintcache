[{"C:\\Users\\grigo\\OneDrive\\Рабочий стол\\tasktimelinezone\\src\\index.js":"1","C:\\Users\\grigo\\OneDrive\\Рабочий стол\\tasktimelinezone\\src\\App.js":"2","C:\\Users\\grigo\\OneDrive\\Рабочий стол\\tasktimelinezone\\src\\serviceWorker.js":"3","C:\\Users\\grigo\\OneDrive\\Рабочий стол\\tasktimelinezone\\src\\components\\TodoInput.js":"4","C:\\Users\\grigo\\OneDrive\\Рабочий стол\\tasktimelinezone\\src\\components\\TodoList.js":"5","C:\\Users\\grigo\\OneDrive\\Рабочий стол\\tasktimelinezone\\src\\components\\TodoItem.js":"6"},{"size":463,"mtime":1611748736029,"results":"7","hashOfConfig":"8"},{"size":4844,"mtime":1611831389194,"results":"9","hashOfConfig":"8"},{"size":5083,"mtime":1611748736029,"results":"10","hashOfConfig":"8"},{"size":1748,"mtime":1611831068711,"results":"11","hashOfConfig":"8"},{"size":961,"mtime":1611831124312,"results":"12","hashOfConfig":"8"},{"size":814,"mtime":1611832511156,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"fzy8vf",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\grigo\\OneDrive\\Рабочий стол\\tasktimelinezone\\src\\index.js",[],["29","30"],"C:\\Users\\grigo\\OneDrive\\Рабочий стол\\tasktimelinezone\\src\\App.js",["31"],"import React, { Component } from \"react\";\r\nimport TodoInput from \"./components/TodoInput\";\r\nimport TodoList from \"./components/TodoList\";\r\nimport Axios from \"axios\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport uuid from \"uuid\";\r\nclass App extends Component {\r\n  state = {\r\n    items: [],\r\n    // id: uuid(),\r\n    name: \"\",\r\n    email: '',\r\n    gender: \"\",\r\n    status: '',\r\n    editItem: false,\r\n    item: \"\"\r\n  };\r\n  handleChange = e => {\r\n    const { email, gender, status, name, value } = e.target\r\n  \r\n    this.setState({\r\n      [name]: value,\r\n      [email]: value,\r\n      [gender]: value,\r\n      [status]: value,\r\n\r\n    });\r\n  };\r\n\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(this.state, 5555)\r\n    const newItem = {\r\n      // id: this.state.id,\r\n      email: this.state.email,\r\n      name: this.state.name,\r\n      gender: this.state.gender,\r\n\r\n      status: this.state.status\r\n    };\r\n    let myJSON = JSON.stringify(newItem)\r\n\r\n    Axios.post(\"https://gorest.co.in/public-api/users\", myJSON, {\r\n      headers: {\r\n        \"Accept\": \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        'Authorization': `Bearer a6e8a51d79546ac79c5165bb181bad6268cfe14dc10af86b0fa6ed7cad7a91b1`\r\n      }\r\n    })\r\n      .then(res => {\r\n        console.log(res, 'data')\r\n        this.getId()\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n\r\n      })\r\n    const updatedItems = [...this.state.items, newItem];\r\n\r\n    this.setState({\r\n      items: updatedItems,\r\n      item: \"\",\r\n\r\n    });\r\n  };\r\n  clearList = () => {\r\n    this.setState({\r\n      items: []\r\n    });\r\n  };\r\n\r\n\r\n  handleDelete = id => {\r\n    const filteredItems = this.state.items.filter(item => item.id !== id);\r\n    this.setState({\r\n      items: filteredItems\r\n    });\r\n    console.log(id)\r\n    Axios.delete(`https://gorest.co.in/public-api/users/${id}`, {\r\n      headers: {\r\n        \"Accept\": \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        'Authorization': `Bearer a6e8a51d79546ac79c5165bb181bad6268cfe14dc10af86b0fa6ed7cad7a91b1`\r\n      }\r\n    })\r\n      .then(res => {\r\n        // console.log(res, 'data')\r\n        this.getId()\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n\r\n      })\r\n\r\n  };\r\n\r\n\r\n  getId() {\r\n    Axios.get(`https://gorest.co.in/public-api/users`)\r\n      .then(response => {\r\n        console.log(response.data.data, 'post')\r\n        this.setState({ items: response.data.data })\r\n\r\n      })\r\n  }\r\n  componentDidMount() {\r\n    this.getId()\r\n  }\r\n\r\n  handleEdit = id => {\r\n    console.log(id, 'id')\r\n    const filteredItems = this.state.items.filter(item => item.id !== id);\r\n\r\n    const selectedItem = this.state.items.find(item => item.id === id);\r\n\r\n\r\n\r\n    this.setState({\r\n      items: filteredItems,\r\n      name: selectedItem.name,\r\n      email: selectedItem.email,\r\n      gender: selectedItem.gender,\r\n      status: selectedItem.status,\r\n      id: selectedItem.id\r\n    });\r\n\r\n\r\n    // console.log(this.state, 'sadsaas')\r\n\r\n  };\r\n  handeleUpdate = () => {\r\n    // console.log(id,'sds')\r\n    // // const filteredItems = this.state.items.filter(item => item.id !== id);\r\n\r\n    // const selectedItem = this.state.items.find(item => item.id === id);\r\n    let id=this.state.id\r\n    const newItem = {\r\n      // id: this.state.id,\r\n      email: this.state.email,\r\n      name: this.state.name,\r\n      gender: this.state.gender,\r\n\r\n      status: this.state.status\r\n    };\r\n    let myJSON = JSON.stringify(newItem)\r\n    Axios.patch(`https://gorest.co.in/public-api/users/${id}`, myJSON, {\r\n      headers: {\r\n        \"Accept\": \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        'Authorization': `Bearer a6e8a51d79546ac79c5165bb181bad6268cfe14dc10af86b0fa6ed7cad7a91b1`\r\n      }\r\n    })\r\n      .then(res => {\r\n        console.log(res, 'data')\r\n        this.getId()\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n\r\n      })\r\nconsole.log(newItem)\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-10 mx-auto col-md-8 mt-4\">\r\n            <h3 className=\"text-capitalize text-center\">User</h3>\r\n            <TodoInput\r\n              name={this.state.name}\r\n              email={this.state.email}\r\n              gender={this.state.gender}\r\n              status={this.state.status}\r\n              handleChange={this.handleChange}\r\n              handleSubmit={this.handleSubmit}\r\n             \r\n              handeleUpdate={this.handeleUpdate}\r\n            />\r\n            <TodoList\r\n              items={this.state.items}\r\n              clearList={this.clearList}\r\n              handleDelete={this.handleDelete}\r\n              handleEdit={this.handleEdit}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\grigo\\OneDrive\\Рабочий стол\\tasktimelinezone\\src\\serviceWorker.js",[],"C:\\Users\\grigo\\OneDrive\\Рабочий стол\\tasktimelinezone\\src\\components\\TodoInput.js",["32","33","34"],"import React, { Component } from \"react\";\r\nimport Axios from \"axios\"\r\nexport default class TodoInput extends Component {\r\n  \r\n  render() {\r\n    const { name,email,gender,status, handleChange, handleSubmit, editItem ,handelEdit,handeleUpdate} = this.props;\r\n    return (\r\n      console.log(name,'item', email,'email'),\r\n    \r\n          <div className=\"input-group\">\r\n            \r\n            <input\r\n              name='name'\r\n              type=\"text\"\r\n              className=\"form-control text-capitalize\"\r\n              placeholder=\"Name\"\r\n              value={name}\r\n              \r\n              onChange={handleChange}\r\n              />\r\n             <input\r\n              name='email'\r\n              type=\"text\"\r\n              className=\"form-control text-capitalize\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={handleChange}\r\n            />\r\n             <input\r\n              name='gender'\r\n              type=\"text\"\r\n              className=\"form-control text-capitalize\"\r\n              placeholder=\"Gender\"\r\n              value={gender}\r\n              onChange={handleChange}\r\n            />\r\n             <input\r\n              name='status'\r\n              type=\"text\"\r\n              className=\"form-control text-capitalize\"\r\n              placeholder=\"Status\"\r\n              value={status}\r\n              onChange={handleChange}\r\n            />\r\n            <button type='submit' className=\"btn btn-block btn-success mt-3\" onClick={handleSubmit}>Create User</button>\r\n          <button type='submit' className=\"btn btn-block btn-primary mt-3\" onClick={handeleUpdate}>Update User</button>\r\n          </div>\r\n          \r\n          \r\n          \r\n           \r\n        \r\n      \r\n    );\r\n  }\r\n}\r\n","C:\\Users\\grigo\\OneDrive\\Рабочий стол\\tasktimelinezone\\src\\components\\TodoList.js",[],"C:\\Users\\grigo\\OneDrive\\Рабочий стол\\tasktimelinezone\\src\\components\\TodoItem.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":6,"column":8,"nodeType":"41","messageId":"42","endLine":6,"endColumn":12},{"ruleId":"39","severity":1,"message":"43","line":2,"column":8,"nodeType":"41","messageId":"42","endLine":2,"endColumn":13},{"ruleId":"39","severity":1,"message":"44","line":6,"column":67,"nodeType":"41","messageId":"42","endLine":6,"endColumn":75},{"ruleId":"39","severity":1,"message":"45","line":6,"column":77,"nodeType":"41","messageId":"42","endLine":6,"endColumn":87},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'uuid' is defined but never used.","Identifier","unusedVar","'Axios' is defined but never used.","'editItem' is assigned a value but never used.","'handelEdit' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]